; #############################################################################
; # Atlas 2 Kernel - String routines                                          #
; # Created: 28.01.2013                                                       #
; # Changelog:                                                                #
; # 28.01.2013, plusmid - file created, basic routines                        #
; # 31.01.2013, plusmid - added strncpy                                       #
; #############################################################################


; strlen - calculates the length of a string
; A -> pointer to the string
; A <- length of the string in words
:strlen
	SET PUSH, B

	SET B, 0xFFFF
	SUB A, 1

:strlen_loop
	ADD A, 1
	ADD B, 1
	IFN [A], 0
		SET PC, strlen_loop

	SET A, B
	SET B, POP
	SET PC, POP


; strcpy - copies a string from one address to another
; A -> source pointer
; B -> destination pointer
; A <- copied words
:strcpy
	SET PUSH, B
	SET PUSH, C

	SET C, 0

:strcpy_loop
	IFE [A], 0
		SET PC, strcpy_end
	SET [B], [A]
	ADD A, 1
	ADD B, 1
	ADD C, 1
	SET PC, strcpy_loop

:strcpy_end
	SET [B], [A]
	SET A, C

	SET B, POP
	SET C, POP
	SET PC, POP


; strncpy - same as strcpy but with length limitation
; A -> source string
; B -> destination string
; C -> max length
:strncpy
	SET PUSH, A
	SET PUSH, B
	SET PUSH, C

:strncpy_loop
	SET [B], [A]
	IFE [A], 0
		SET PC, strncpy_end
	SUB C, 1
	ADD A, 1
	ADD B, 1
	IFN C, 0
		SET PC, strncpy_loop

:strncpy_end
	SET C, POP
	SET B, POP
	SET A, POP
	SET PC, POP


; strpack - packs a string
; A -> source string
; B -> destination of the packed string
:strpack
	SET PUSH, A
	SET PUSH, B
	SET PUSH, X
	SET PUSH, Y

:strpack_loop
	SET C, [A]
	AND X, 0x00FF
	IFE [A], 0x0000
		SET PC, strpack_end

	ADD A, 1
	SET Y, [A]
	SHL Y, 8
	BOR X, Y

	IFE [A], 0x0000
		SET PC, strpack_end

	SET [B], X
	ADD A, 1
	ADD B, 1
	SET PC, strpack_loop

:strpack_end
	SET [B], X

	SET Y, POP
	SET X, POP
	SET B, POP
	SET A, POP
	SET PC, POP


; strunpack - unpacks a string packed by strpack
; A -> packed source string
; B -> destination string
:strunpack
	SET PUSH, A
	SET PUSH, B
	SET PUSH, X

:strunpack_loop
	SET X, [A]
	SHR X, 8
	SET [B], X
	ADD B, 1

	IFE X, 0
		SET PC, strunpack_end

	SET X, [A]
	AND X, 0x00FF
	SET [B], X
	ADD A, 1
	ADD B, 1

	IFN X, 0
		SET PC, strunpack_loop

:strunpack_end
	SET X, POP
	SET B, POP
	SET A, POP
	SET PC, POP

